{
  "version": 3,
  "sources": ["../../template/index.js"],
  "sourcesContent": ["console.log('lemon loading')\nvar lemonVariables = {}\n\nwindow.onClickLightDark = function () {\n  console.log('onClickLightDark')\n  document.documentElement.classList.toggle('dark')\n}\n\nwindow.selectOnChange = function (event) {\n  console.log(event)\n  console.log(event.target)\n  console.log(event.target.value)\n  console.log(event.target.attributes['data-var'].value)\n  console.log(JSON.parse(event.target.value))\n  const variableName = event.target.attributes['data-var'].value\n  const value = JSON.parse(event.target.value)\n  lemonVariables[variableName] = value\n}\n\nwindow.onload = function () {\n  // init all select elements\n  const selectElements = document.querySelectorAll('select')\n  selectElements.forEach(function (selectElement) {\n    const variableName = selectElement.attributes['data-var'].value\n    const value = JSON.parse(selectElement.value)\n    lemonVariables[variableName] = value\n    console.log(variableName)\n    console.log(value)\n  })\n}\n\nwindow.buttonLink = function (link = '') {\n  const result = replaceVars(link)\n  window.open(result, '_blank')\n}\n\nfunction replaceVars (inputString) {\n  // Regular expression pattern to match $var(x)\n  const regex = /\\$var\\(([^)]+)\\)/g\n\n  // Replace occurrences of $var(x) with corresponding values from the object\n  const result = inputString.replace(regex, function (match, key) {\n    // Access the value from the object using dot notation\n    const value = getObjectValue(lemonVariables, key)\n    return value !== undefined ? value : match\n  })\n\n  return result\n}\n\n// Helper function to access nested values from the object using dot notation\nfunction getObjectValue (object, key) {\n  const keys = key.split('.')\n  let value = object\n\n  for (let i = 0; i < keys.length; i++) {\n    if (!value || typeof value !== 'object') {\n      return undefined\n    }\n    value = value[keys[i]]\n  }\n\n  return value\n}\n"],
  "mappings": "mBAAA,QAAQ,IAAI,eAAe,EAC3B,IAAIA,EAAiB,CAAC,EAEtB,OAAO,iBAAmB,UAAY,CACpC,QAAQ,IAAI,kBAAkB,EAC9B,SAAS,gBAAgB,UAAU,OAAO,MAAM,CAClD,EAEA,OAAO,eAAiB,SAAUC,EAAO,CACvC,QAAQ,IAAIA,CAAK,EACjB,QAAQ,IAAIA,EAAM,MAAM,EACxB,QAAQ,IAAIA,EAAM,OAAO,KAAK,EAC9B,QAAQ,IAAIA,EAAM,OAAO,WAAW,UAAU,EAAE,KAAK,EACrD,QAAQ,IAAI,KAAK,MAAMA,EAAM,OAAO,KAAK,CAAC,EAC1C,IAAMC,EAAeD,EAAM,OAAO,WAAW,UAAU,EAAE,MACnDE,EAAQ,KAAK,MAAMF,EAAM,OAAO,KAAK,EAC3CD,EAAeE,CAAY,EAAIC,CACjC,EAEA,OAAO,OAAS,UAAY,CAEH,SAAS,iBAAiB,QAAQ,EAC1C,QAAQ,SAAUC,EAAe,CAC9C,IAAMF,EAAeE,EAAc,WAAW,UAAU,EAAE,MACpDD,EAAQ,KAAK,MAAMC,EAAc,KAAK,EAC5CJ,EAAeE,CAAY,EAAIC,EAC/B,QAAQ,IAAID,CAAY,EACxB,QAAQ,IAAIC,CAAK,CACnB,CAAC,CACH,EAEA,OAAO,WAAa,SAAUE,EAAO,GAAI,CACvC,IAAMC,EAASC,EAAYF,CAAI,EAC/B,OAAO,KAAKC,EAAQ,QAAQ,CAC9B,EAEA,SAASC,EAAaC,EAAa,CAEjC,IAAMC,EAAQ,oBASd,OANeD,EAAY,QAAQC,EAAO,SAAUC,EAAOC,EAAK,CAE9D,IAAMR,EAAQS,EAAeZ,EAAgBW,CAAG,EAChD,OAAOR,IAAU,OAAYA,EAAQO,CACvC,CAAC,CAGH,CAGA,SAASE,EAAgBC,EAAQF,EAAK,CACpC,IAAMG,EAAOH,EAAI,MAAM,GAAG,EACtBR,EAAQU,EAEZ,QAASE,EAAI,EAAGA,EAAID,EAAK,OAAQC,IAAK,CACpC,GAAI,CAACZ,GAAS,OAAOA,GAAU,SAC7B,OAEFA,EAAQA,EAAMW,EAAKC,CAAC,CAAC,CACvB,CAEA,OAAOZ,CACT",
  "names": ["lemonVariables", "event", "variableName", "value", "selectElement", "link", "result", "replaceVars", "inputString", "regex", "match", "key", "getObjectValue", "object", "keys", "i"]
}
